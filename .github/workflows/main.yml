# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  ubuntu-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Setup | Rust
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable

      - name: install dependencies 
        run : |
          sudo apt update &&sudo apt upgrade -y && sudo apt install -y zip libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev libappindicator3-dev patchelf librsvg2-dev
          
      - name: build
        run : |
          yarn
          yarn tauri info
          yarn tauri build

      - name: compress Release
        run : |
          zip -r ubuntu-release.zip ./src-tauri/target/release/bundle ./src-tauri/target/release/tauri-vue-gui-simple-action*
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ubuntu-${{ github.ref }}
          release_name: ubuntu-${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./ubuntu-release.zip
          asset_name: ubuntu-release.zip
          asset_content_type: application/zip
          
  macos-build:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Setup | Rust
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable
          
      - name: build
        run : |
          yarn
          yarn tauri info
          yarn tauri build
          
      - name: compress Release
        run : |
          zip -r macos-release.zip ./src-tauri/target/release/bundle ./src-tauri/target/release/tauri-vue-gui-simple-action*  
  
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: macos-${{ github.ref }}
          release_name: macos-${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./macos-release.zip
          asset_name: macos-release.zip
          asset_content_type: application/zip
